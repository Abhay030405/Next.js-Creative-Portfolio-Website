// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// */
// "use client";
// import React, { useRef } from "react";
// import { useGLTF } from "@react-three/drei";
// import { useFrame } from "@react-three/fiber";

// const Staff = React.memo(function Staff(props) {
//   // Use React.memo for performance optimization
//   const { nodes, materials } = useGLTF("/models/staff-transformed.glb");
//   const modelRef = useRef();

//   useFrame(() => {
//     modelRef.current.rotation.y += 0.007;
//   });

//   return (
//     <group
//       {...props}
//       dispose={null}
//       scale={[3, 3, 3]}
//       position={[0, -2, 0]}
//       ref={modelRef}
//     >
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.Wizard_Staff3_Wizard_Staff3_0.geometry}
//         material={materials.Wizard_Staff3}
//         position={[-0.041, 0.983, 0.768]}
//         rotation={[0, Math.PI / 2, 0]}
//         scale={0.04}
//       />
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.Wizard_Staff3_Wizard_Staff3_0_1.geometry}
//         material={materials.Wizard_Staff3}
//         position={[-0.041, 0.983, 0.768]}
//         rotation={[0, Math.PI / 2, 0]}
//         scale={0.04}
//       />
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.Wizard_Staff3_Wizard_Staff3_0_2.geometry}
//         material={materials.Wizard_Staff3}
//         position={[-0.041, 0.983, 0.768]}
//         rotation={[0, Math.PI / 2, 0]}
//         scale={0.04}
//       />
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.Wizard_Staff3_Wizard_Staff3_0_3.geometry}
//         material={materials.Wizard_Staff3}
//         position={[-0.041, 0.983, 0.768]}
//         rotation={[0, Math.PI / 2, 0]}
//         scale={0.04}
//       />
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.Wizard_Staff2_Wizard_Staff2_0.geometry}
//         material={materials.Wizard_Staff2}
//         position={[-0.041, 0.983, 0.768]}
//         rotation={[0, Math.PI / 2, 0]}
//         scale={0.04}
//       />
//     </group>
//   );
// });

// export default Staff;
// useGLTF.preload("/models/staff-transformed.glb");

"use client";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const Staff = React.memo(function Staff(props) {
  const { scene } = useGLTF("/models/staff-transformed.glb");
  const modelRef = useRef();
  
<group ref={modelRef} position={[0, 2.5, 0]}>
  <primitive object={scene} />
</group>

  useFrame(() => {
    if (modelRef.current) {
      modelRef.current.rotation.y += 0.007;
    }
  });
  useFrame((state) => {
      if (modelRef.current) {
        modelRef.current.position.y = Math.sin(state.clock.elapsedTime) * 0.3 // Float amplitude
      }
  });

  return (
    <primitive
      object={scene}
      ref={modelRef}
      scale={[0.04, 0.04, 0.04]}
      position={[0, -2, 0]}
      {...props}
    />
  );
});

export default Staff;
useGLTF.preload("/models/staff-transformed.glb");
